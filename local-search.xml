<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>利用铂电阻的高精度测温电路</title>
    <link href="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/"/>
    <url>/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<p>　　<br>　　要精确的测温，常用的就是PT100&#x2F;PT1000这种铂电阻了，传感器的阻值随着温度变化，通入电流电压源，才经过采样 -&gt; 放大 -&gt; ADC 转换的过程。粗略的测比较简单，但是想精确的测量，电路上还需要多多学习。</p><h3 id="测温方案之概要："><a href="#测温方案之概要：" class="headerlink" title="测温方案之概要："></a>测温方案之概要：</h3><p>　　使用铂电阻进行测温过程中，存在的导线内阻误差，及使用线性拟合出的阻值温度转换公式存在温度偏移问题，测温方案着重考虑消除导线内阻产生的误差以及采样、计算误差上。</p><p>　　常用热电阻测温电路有：</p><ol><li>利用串联精度高电阻分压的方式，经过运算放大和跟随后采集,这种方法结构简单、成本低,但是测量误较大。</li><li>电桥法测电阻精度高，但是计算起来不太容易，电桥校准平衡，可调电阻的阻止并不明确。</li><li>三线制单恒流源法利用外部恒流源驱动热电阻, 经过运放调理电路后进行采集，这种方法结构简单，测量精度高，但是无法避免热电阻导线内阻和恒流源波动产生的影响，且有一段导线电阻无法排除。</li><li>四线制单恒流源法，热电阻两端引出两组导线，一组导线专用于通入恒流源，另一组导线专用于测量电阻两端电压，由此可以排除导线电阻对于测量的影响。此种方式精度最高。</li><li><strong>基于AD7792&#x2F;AD7793芯片的双恒流源三线制方案</strong>，电路简单且可以排除导线电阻引起的测量误差。</li></ol><h4 id="双恒流源法"><a href="#双恒流源法" class="headerlink" title="双恒流源法"></a>双恒流源法</h4><p>　　为达到最佳三线式RTD配置，需要用到两个完全匹配的电流源。AD7792&#x2F;AD7793 具备两个匹配良好的电流源，非常适合此应用场景。如果只使用一个电流源Iout1，由于激励电流流经RL1，引线电阻将产生误差。</p><p>　　这时使用第二个电流源补偿激励电流流经RL1所产生的误差。 假设两个电流源相等，同时RL1 &#x3D; RL2，电流源Iout2 经过RL2 时产生的误差电压就与RL1上的误差电压相同了。 由于两处的电压是共模电压，AIN1的+-之间是没有误差的，由此完成线阻误差的补偿。</p><p>　　利用前面的两个电流源，还可以提供ADC采样的基准电压。这里要用到一个精密电阻Rref，经过Rref的电流为Iout1+Iout2。这一设计可以确保模拟电压输入范围同基准电压呈比例变化，基准电压的同步变化可以补偿因激励电流的温漂而导致的模拟输入电压误差。</p><p><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/image-20240220194238478-1708429365902-1.png" alt="image">　　<br>　　AD7793芯片内置低噪声、带有三个差分模拟输入的24位Σ-△ADC型ADC,内部集成了10μA、210μA及1mA激励电流源和仪表放大器，可以将源阻抗直接置于前端，均方根(RMS) 噪声最低为40nV。</p><p>　　芯片自带基准源，同时支持外部基准电压，设计采用外部基准电压，可以消除由于恒流源波动导致参考电压变化带入的误差。采样电路设计如图4所示。</p><p>　　图21 是由AD7793芯片内部输出的恒流源，大小为1mA， RL1、RL2、RL3、RL4是Pt1000导线内阻，Rt为Pt1000电阻，Re为电阻阻值。AD7793采用双极性模式，则Pt1000测量结果为:<br><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/1-2304250U114458.png" alt="img"><br>　　上式中，Code 为AD读取的采样值，N为AD芯片位数,AIN为待测热电阻电压值，GAIN 为芯片增益值，Vref是 外部基准电压，即Re电阻的电压值。AD采样芯片外部参考电压为4. 5V，热电阻两侧待测电压最大值为4.21V，即增益值GAIN设置为1。由Rt的表达式可以得出，电流源波动误差通过使用外部基准电压设计，可以完全消除，同时也完全消除热电阻导线内阻影响，热电阻阻值测量误差最终只与电阻Re的精度和AD7793芯片性能有关。</p><h4 id="电阻选型与设计"><a href="#电阻选型与设计" class="headerlink" title="电阻选型与设计"></a>电阻选型与设计</h4><p>　　AD7793采样到的信号需要送入FPGA中进行滤波处理，因此它的输出更新速度不能过慢，AD793 的输出更新速率与分辨率位数是反比关系，需要兼顾更新速率与分辨率位数，取更新速率为33. 2Hz，此时分辨率位数为21位。<br>　　芯片恒流源值分为三个:10μA、210μA， 1mA。假设想要温度测量精度达到0.01℃，电阻分辨率需要达到0.0391Ω，即使用210μA恒流源电压测量分辨精度达到0. 00821mV，使用1mA恒流源式电压分辨率达到0.0391mV。由于芯片分辨率位21位，芯片满量程电压为5V，电压最小分辨率为: .<br><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/1-2304250U123P7.png" alt="img"><br>　　此时电压最小分辨率均满足要求，而使用1mA恒流源电压最小分辨率是使用210μA恒流源的4.761音，使用1mA恒流源测量精度会更高，且抗干扰能力较强同时可以避免铂电阻因流过本身电流而产生的热效应。<strong>Pt1000热电阻</strong>在0℃~300℃是电阻变化范围为1000Ω ~2120. 515Ω变化，其电压变化范围则为1V~2. 120515V变化，使用两个热电阻串联，电压范围则可达到2V~4.2103V。串联热电阻不仅扩大了测量电压范围，省去外围运放电路，简化电路.结构，减小因运放自身产生的误差，同时最小电阻分辨率由0.0391Ω扩大到0.0782Ω，提高温度测量精度并提高靠干扰能力。<br>　　由Rt最终计算公式可知，通过降低Re本身误差可以保证系统测量精度。Rt 热电阻电压变化范围为2V~4. 2103V,则AD芯片参考电压设计为4.5V时满足系统测量要求，即电阻Re的值确定为4.5kΩ。将9个容差为0.01%，温溧为0.2ppm&#x2F;℃的500Ω电阻串联，可以有效地降低误差，如图5所示。<br><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/1-2304250U132644.png" alt="img"> </p><h4 id="软件算法设计"><a href="#软件算法设计" class="headerlink" title="软件算法设计"></a>软件算法设计</h4><p>均方值滤波算法<br>　　<strong>热电阻</strong>两侧接入示波器，将采样到的数据做快速傅里叶变换，可以看出热电阻噪声主要来源于高斯白噪声。在物理学中常用均方根值(RMS) 来分析噪声，反映物理量的有效值，与常规平均滤波法相比均方根滤波具有更好的数据稳定性，是一个标准的数值稳定性优化算法，能够有效地滤除电路中的白噪声。<br><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/1-2304250U141Z3.png" alt="img"><br>　　即信号平方的均值再开方，滤波前后波形仿真对比如图6所示，可以看出，滤波后的波形较为平稳，滤波效果良好。<br><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/1-2304250U150401.png" alt="img"> </p><h4 id="温度转换方法"><a href="#温度转换方法" class="headerlink" title="温度转换方法"></a>温度转换方法</h4><p>　　<strong>热电阻</strong>通过分度表建立阻值与温度的关系，拟合曲线法利用该分度表进行连续的曲线拟合，温度转换的运算量较小，但在高温度区域的精度下降较为明显。因此，考虑采用二分查找加插值补偿的方法在全温度范围内获取较高的计算精度。由于精度较高的热电阻数据量较大，采用二分查表法比，较次数较多，因此首先采用线性法快速定位，之后使用二分查表与插值运算法以减少运算量。<br>线性定位</p><p>　　由于热电阻阻值随温度呈现近似一-次线性变化，因此在定位时可以采用一.次函数以简化运算量。一次函数的斜率和截距通过最大误差法决定，即首先计算每个温度点的阻值误差，并提取其最大值，在不同的斜率和截距下进行误差最大值的比较，并选取误差最大值最小的一组斜率和截距参与线性定位。以Pt1000热电阻为例，其线性定位的一次函数表达式如下:<br><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/1-2304250U200942.png" alt="img"> </p><h4 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h4><p>　　二分查找也叫折半查找，相较于普通查表，效率更为高效，它要求处理器带有存储结构，用于存放查找表，二分查找要求数组采用顺序存储结构，表中元素有序排列。对于精度高的热电阻分度表，数据量较大，若直接采用二分查找则运算量也较大，因此，在线性定位的基础上对最大误差留有适当裕量以缩小二分查找的范围，降低运算量。对于Pt1000热电阻，最大误差留有适当裕量后取±4℃;传统二分法区间包含3000个数据，需循环11~12次，而线性定位缩小范围后，仅包含80个数据，需循环6~7次，因此,可有效减少循环次数，降低运算量。</p><h4 id="插值算法"><a href="#插值算法" class="headerlink" title="插值算法"></a>插值算法</h4><p>　　线性插值算法是利用已知数据去预测未知数据的数据处理方法，以距离为权重的一-种插值算法，根据插值点左右临近的两个数据进行线性估算，插值点数值大小取决于距离到临近两点的距离。</p><p>　　Rt为测量热电阻阻值，Rt0. Rt1为Rt在查找表内相邻的两个热电阻阻值，t0、 t1为查找表中Rt0. Rt1对应的温度:<br><img src="/2024/02/20/%E4%B8%80%E7%A7%8D%E7%B2%BE%E5%BA%A6%E9%AB%98%E7%83%AD%E7%94%B5%E9%98%BB%E6%B5%8B%E6%B8%A9%E7%94%B5%E8%B7%AF%E5%8F%8A%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1/1-2304250U210V6.png" alt="img"><br>　　利用测得的热电阻阻值Rt与查找表中相邻阻值Rto、Rt1的距离作为权重，相邻阻值对应的温度t0、t1 作为加权，计算出最终测量温度值。</p><h3 id="TODO-方案落地-测试"><a href="#TODO-方案落地-测试" class="headerlink" title="TODO : 方案落地 &amp; 测试"></a>TODO : 方案落地 &amp; 测试</h3><p>　　to be continued</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
